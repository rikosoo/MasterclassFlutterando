import 'package:flutter/material.dart';

class IMCCalculator extends StatefulWidget {
  const IMCCalculator({Key? key});

  @override
  _IMCCalculatorState createState() => _IMCCalculatorState();
}

class _IMCCalculatorState extends State<IMCCalculator> {
  TextEditingController weightController = TextEditingController();
  TextEditingController heightController = TextEditingController();
  String result = ''; // variaveis para ser mostrada
  String bmiStatus = '';

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar( // esta é a barra de cima
        title: const Text('Calculadora de IMC'),
        backgroundColor: Colors.greenAccent, // aqui é a cor de fundo
      ),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: ListView( // Aqui é importante pra aplicação nao dar warming pois quando abre o teclado exista rolagem
          children: [
            Center(
              child: Column(
                mainAxisAlignment: MainAxisAlignment.center,
                children: [
                  TextField(
                    controller: weightController,
                    keyboardType: TextInputType.number,
                    decoration: const InputDecoration(
                      labelText: 'Peso (kg)',
                    ),
                  ),
                  const SizedBox(height: 16.0),
                  TextField(
                    controller: heightController,
                    keyboardType: TextInputType.number,
                    decoration: const InputDecoration(
                      labelText: 'Altura (cm)',
                    ),
                  ),
                  const SizedBox(height: 16.0),
                  ElevatedButton(
                    onPressed: () {
                      double weight = double.parse(weightController.text);  // pega 2  digitos para o peso
                      double height = double.parse(heightController.text) / 100.0; // pega 2 digitos para a altura e divide por 100 dando em centimentros
                      double bmi = calculateBMI(weight, height);
                      String status = getBMIStatus(bmi);
                      setState(() {
                        result = 'Seu IMC é ${bmi.toStringAsFixed(1)}';
                        bmiStatus = 'Status: $status';
                      });
                    },
                    child: const Text('Calcular'),
                  ),
                  const SizedBox(height: 16.0),
                  Text(
                    result,
                    style: const TextStyle(fontSize: 20.0),
                  ),
                  Text(
                    bmiStatus,
                    style: const TextStyle(fontSize: 20.0),
                  ),
                ],
              ),
            ),
          ],
        ),
      ),
    );
  }

  double calculateBMI(double weight, double height) {
    return weight / (height * height);
  }
// Codigo pra definir o estilo da pessoa
  String getBMIStatus(double bmi) {
    if (bmi < 18.5) {
      return 'Super Magra';
    } else if (bmi >= 18.5 && bmi < 24.9) {
      return 'Magra';
    } else if (bmi >= 24.9 && bmi < 29.9) {
      return 'Saudável';
    } else if (bmi >= 29.9 && bmi < 34.9) {
      return 'Levemente Obesa';
    } else {
      return 'Obesa';
    }
  }
}

// Para correr no app e mostrar no celular 
void main() {
  runApp(
    const MaterialApp(
      title: 'IMC Calculator',
      home: IMCCalculator(),
    ),
  );
}
